{"version":3,"sources":["./src/app/components/room/room.component.html","./src/app/components/room/room.component.ts","./src/environments/environment.ts","./src/app/components/main/main.component.html","./src/app/components/main/main.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"p-4 w-100\">\n\n    <h3 class=\"text-center\">{{player?.name}} {{id}}</h3>\n\n    <h1 class=\"text-center money mt-5\">{{player?.money}}</h1>\n\n    <div class=\"mt-5 d-grid gap-2\">\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"refresh()\">Обновить</button>\n        <button class=\"btn btn-dark mt-3\" type=\"button\"> Взять деньги из банка </button>\n        <button class=\"btn btn-danger\" type=\"button\"> Отдать деньги в банк </button>\n    </div>\n    <div class=\"mt-5\">\n        <h5>Выполнить перевод другому игроку: </h5>\n        <div class=\"d-grid gap-2\" *ngFor=\"let player of playerList\">\n            <button class=\"btn btn-success\" type=\"button\"> {{player.name}} </button>\n        </div>\n    </div>\n\n    <div class=\"mt-5\">\n        <h5>Что происходит: </h5>\n        <div class=\"money-log d-grid gap-2\">\n            <span>Арина заплатил(а) игроку Юля 300 денег</span>\n            <span class=\"from-bank\">Юля берет деньги из банка: 200</span>\n            <span class=\"into-bank\">Паша отдает деньги в банк: 100</span>\n        </div>\n    </div>\n\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) { }\n  money = 100;\n  id: string;\n  name: string;\n  player: any;\n  playerList: any[];\n\n  ngOnInit(): void {\n    this.route.params.subscribe(async params => {\n      this.id = params.id;\n      this.name = params.name;\n      this.player = await this.http.post(`http://193.124.129.19:3000/enter/${this.id}/${this.name}`, {}).toPromise();\n      this.playerList = await this.http.post<any[]>(`http://193.124.129.19:3000/getPlayerList/${this.id}`, {}).toPromise();\n      console.log(this.player);\n    });\n  }\n\n  async refresh(): Promise<any> {\n    this.player = await this.http.get(`http://193.124.129.19:3000/getPlayerInfo/${this.id}/${this.name}`, {}).toPromise();\n    console.log(this.player);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"p-4\">\n    <h2 class=\"center\">Нет шулерам!</h2>\n\n    <div class=\"input-group mt-4\">\n        <input [(ngModel)]=\"roomCode\" type=\"text\" class=\"form-control\" placeholder=\"Код комнаты\">\n        <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"openModal(enterModal)\">Войти</button>\n    </div>\n\n    <div class=\"d-grid gap-2 mt-4\">\n        <button class=\"btn btn-success\" (click)=\"openModal(newRoomModal)\" type=\"button\">Создать новую комнату</button>\n    </div>\n</div>\n\n\n\n<ng-template #enterModal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Тук-тук!</h4>\n        <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef?.hide()\">\n            <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        Надо выбрать имя\n        <div class=\"input-group mt-2\">\n            <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\">\n        </div>\n        <div class=\"d-grid gap-2 mt-4\">\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"moveToRoom()\">Открыть дверь</button>\n        </div>\n\n    </div>\n</ng-template>\n\n\n<ng-template #newRoomModal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Вжух!</h4>\n        <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef?.hide()\">\n            <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <h6 class=\"mb-3\">Код комнаты будет такой: ejd84r</h6>\n        Надо выбрать имя. Будешь самым первым!\n        <div class=\"input-group mt-2\">\n            <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\">\n        </div>\n        <div class=\"d-grid gap-2 mt-4\">\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"moveToRoom()\">Открыть дверь</button>\n        </div>\n\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  roomCode: number;\n  name: string;\n  bsModalRef?: BsModalRef;\n\n  constructor(private modalService: BsModalService, private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  openModal(ref): void {\n    this.bsModalRef = this.modalService.show(ref);\n  }\n\n  moveToRoom(): void {\n    this.bsModalRef.hide();\n    this.router.navigate([`room/${this.roomCode}/${this.name}`]);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'money';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RoomComponent } from './components/room/room.component';\nimport { MainComponent } from './components/main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoomComponent,\n    MainComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './components/main/main.component';\nimport { RoomComponent } from './components/room/room.component';\n\nconst routes: Routes = [\n  { path: '', component: MainComponent },\n  { path: 'room/:id/:name', component: RoomComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}